function overlayIndividualDeathPoints(data, group, group_categories, ...
                                     graphBar, nGroup, nRegions, ...
                                     lineColorMatrix, jsonFilePath, deathVector)

[markerShapeMatrix, filledStatusLogical] = generateIndividualMarkers(jsonFilePath);

hold on  % <<< SOLO AQUÍ

for g = 1:nGroup
    isInGroup = group == group_categories{g};
    data_group = data(isInGroup, :);
    death_group = deathVector(isInGroup);

    for r = 1:nRegions
        xPos = graphBar(g).XEndPoints(r);
        yVals = data_group(:, r);
        marker = markerShapeMatrix{g};

        idxDeath = death_group;
        idxNoDeath = ~death_group;

        if any(idxDeath)
            scatter(repmat(xPos, sum(idxDeath), 1), yVals(idxDeath), 30, ...
                'Marker', marker, ...
                'MarkerEdgeColor', [1 0 0], ...
                'MarkerFaceColor', [1 0 0], ...
                'LineWidth', 1, ...
                'jitter', 'on', 'jitterAmount', 0.10);
        end

        if any(idxNoDeath)
            if filledStatusLogical(g)
                scatter(repmat(xPos, sum(idxNoDeath), 1), yVals(idxNoDeath), 30, ...
                    'Marker', marker, ...
                    'MarkerEdgeColor', lineColorMatrix(g,:), ...
                    'MarkerFaceColor', lineColorMatrix(g,:), ...
                    'LineWidth', 1, ...
                    'jitter', 'on', 'jitterAmount', 0.10);
            else
                scatter(repmat(xPos, sum(idxNoDeath), 1), yVals(idxNoDeath), 30, ...
                    'Marker', marker, ...
                    'MarkerEdgeColor', lineColorMatrix(g,:), ...
                    'MarkerFaceColor', 'none', ...
                    'LineWidth', 1, ...
                    'jitter', 'on', 'jitterAmount', 0.10);
            end
        end
    end
end

hold off  % <<< SOLO AQUÍ
end